\nimport React from \'react\';\n\nconst Chapter6 = () => {\n  return (\n    <div className=\"chapter-content\">\n      <h2>第6章: 実践！アプリ開発チュートリアル</h2>\n      <p>これまでの章で学んだ知識を活かして、実際にWebアプリを作成してみましょう。ここでは、教育現場で役立つ2つの簡単なWebアプリの作成手順を解説します。</p>\n\n      <h3>例1: 簡単なアンケートフォーム</h3>\n      <p>生徒や保護者から簡単なアンケートを収集するためのWebフォームを作成します。回答はGoogle スプレッドシートに自動で記録されます。</p>\n\n      <h4>1. スプレッドシートの準備</h4>\n      <p>新しいGoogle スプレッドシートを作成し、シート名を「アンケート回答」とし、1行目に以下の見出しを入力しておきます。</p>\n      <p><code>タイムスタンプ, 名前, 質問1の回答, 質問2の回答</code></p>\n\n      <h4>2. GASコードの記述</h4>\n      <p>スクリプトエディタに以下のコードを記述し、保存してください。</p>\n      <pre><code>\nfunction doGet() {\n  const htmlOutput = HtmlService.createHtmlOutput(`\n    &lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n    &lt;head&gt;\n      &lt;base target=\"_top\"&gt;\n      &lt;title&gt;簡単アンケート&lt;/title&gt;\n      &lt;style&gt;\n        body { font-family: sans-serif; margin: 20px; }\n        label { display: block; margin-bottom: 5px; }\n        input[type=\"text\"], textarea { width: 80%; padding: 8px; margin-bottom: 10px; border: 1px solid #ccc; border-radius: 4px; }\n        input[type=\"submit\"] { background-color: #4CAF50; color: white; padding: 10px 15px; border: none; border-radius: 4px; cursor: pointer; }\n        input[type=\"submit\"]:hover { background-color: #45a049; }\n      &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n      &lt;h1&gt;簡単なアンケートフォーム&lt;/h1&gt;\n      &lt;form method=\"post\" action=\"<%= ScriptApp.getWebAppUrl() %>\"&gt;\n        &lt;label for=\"name\"&gt;お名前:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;\n\n        &lt;label for=\"q1\"&gt;質問1: この授業は分かりやすかったですか？&lt;/label&gt;\n        &lt;input type=\"text\" id=\"q1\" name=\"q1\" required&gt;\n\n        &lt;label for=\"q2\"&gt;質問2: 今後、どのような内容を学びたいですか？&lt;/label&gt;\n        &lt;textarea id=\"q2\" name=\"q2\" rows=\"4\" required&gt;&lt;/textarea&gt;\n\n        &lt;input type=\"submit\" value=\"回答を送信\"&gt;\n      &lt;/form&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n  `);\n  return htmlOutput;\n}\n\nfunction doPost(e) {\n  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(\'アンケート回答\');\n  const timestamp = new Date();\n  const name = e.parameter.name;\n  const q1 = e.parameter.q1;\n  const q2 = e.parameter.q2;\n\n  sheet.appendRow([timestamp, name, q1, q2]);\n\n  return HtmlService.createHtmlOutput(\'<h1>回答ありがとうございました！</h1>&lt;p&gt;ご協力に感謝いたします。&lt;/p&gt;\');\n}\n      </code></pre>\n\n      <h4>3. Webアプリとして公開</h4>\n      <p>第3章の手順に従って、このGASプロジェクトをWebアプリとして公開します。</p>\n\n      <h4>4. 動作確認</h4>\n      <p>公開されたURLにアクセスし、フォームに回答を送信してみてください。スプレッドシートにデータが追加されることを確認します。</p>\n\n      <h3>例2: 出欠連絡フォーム</h3>\n      <p>生徒が欠席・遅刻・早退の連絡を簡単に行えるWebフォームを作成します。連絡内容はスプレッドシートに記録され、必要に応じてメール通知も可能です。</p>\n\n      <h4>1. スプレッドシートの準備</h4>\n      <p>新しいGoogle スプレッドシートを作成し、シート名を「出欠連絡」とし、1行目に以下の見出しを入力しておきます。</p>\n      <p><code>タイムスタンプ, クラス, 氏名, 連絡種別, 理由, 連絡者</code></p>\n\n      <h4>2. GASコードの記述</h4>\n      <p>スクリプトエディタに以下のコードを記述し、保存してください。</p>\n      <pre><code>\nfunction doGet() {\n  const htmlOutput = HtmlService.createHtmlOutput(`\n    &lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n    &lt;head&gt;\n      &lt;base target=\"_top\"&gt;\n      &lt;title&gt;出欠連絡フォーム&lt;/title&gt;\n      &lt;style&gt;\n        body { font-family: sans-serif; margin: 20px; }\n        label { display: block; margin-bottom: 5px; }\n        input[type=\"text\"], select, textarea { width: 80%; padding: 8px; margin-bottom: 10px; border: 1px solid #ccc; border-radius: 4px; }\n        input[type=\"radio\"] { margin-right: 5px; }\n        input[type=\"submit\"] { background-color: #008CBA; color: white; padding: 10px 15px; border: none; border-radius: 4px; cursor: pointer; }\n        input[type=\"submit\"]:hover { background-color: #007B9E; }\n      &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n      &lt;h1&gt;出欠連絡フォーム&lt;/h1&gt;\n      &lt;form method=\"post\" action=\"<%= ScriptApp.getWebAppUrl() %>\"&gt;\n        &lt;label for=\"class\"&gt;クラス:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"class\" name=\"class\" required&gt;\n\n        &lt;label for=\"name\"&gt;氏名:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;\n\n        &lt;label&gt;連絡種別:&lt;/label&gt;\n        &lt;input type=\"radio\" id=\"absence\" name=\"type\" value=\"欠席\" required&gt;\n        &lt;label for=\"absence\"&gt;欠席&lt;/label&gt;&lt;br&gt;\n        &lt;input type=\"radio\" id=\"lateness\" name=\"type\" value=\"遅刻\"&gt;\n        &lt;label for=\"lateness\"&gt;遅刻&lt;/label&gt;&lt;br&gt;\n        &lt;input type=\"radio\" id=\"earlyLeave\" name=\"type\" value=\"早退\"&gt;\n        &lt;label for=\"earlyLeave\"&gt;早退&lt;/label&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"reason\"&gt;理由:&lt;/label&gt;\n        &lt;textarea id=\"reason\" name=\"reason\" rows=\"4\"&gt;&lt;/textarea&gt;\n\n        &lt;label for=\"contactPerson\"&gt;連絡者（保護者名など）:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"contactPerson\" name=\"contactPerson\"&gt;\n\n        &lt;input type=\"submit\" value=\"連絡を送信\"&gt;\n      &lt;/form&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n  `);\n  return htmlOutput;\n}\n\nfunction doPost(e) {\n  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(\'出欠連絡\');\n  const timestamp = new Date();\n  const studentClass = e.parameter.class;\n  const studentName = e.parameter.name;\n  const contactType = e.parameter.type;\n  const reason = e.parameter.reason;\n  const contactPerson = e.parameter.contactPerson;\n\n  sheet.appendRow([timestamp, studentClass, studentName, contactType, reason, contactPerson]);\n\n  // 必要であれば、ここでメール通知などの処理を追加できます\n  // MailApp.sendEmail(\'your-email@example.com\', \'出欠連絡がありました\', \`\n  //   クラス: \${studentClass}\n  //   氏名: \${studentName}\n  //   種別: \${contactType}\n  //   理由: \${reason}\n  //   連絡者: \${contactPerson}\n  // \`);\n\n  return HtmlService.createHtmlOutput(\'<h1>出欠連絡を送信しました！</h1>&lt;p&gt;ご連絡ありがとうございました。&lt;/p&gt;\');\n}\n      </code></pre>\n\n      <h4>3. Webアプリとして公開</h4>\n      <p>第3章の手順に従って、このGASプロジェクトをWebアプリとして公開します。</p>\n\n      <h4>4. 動作確認</h4>\n      <p>公開されたURLにアクセスし、フォームに情報を送信してみてください。スプレッドシートにデータが追加されることを確認します。</p>\n    </div>\n  );\n};\n\nexport default Chapter6;\n